# cf https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: ci
on:
  push:
    branches: [dev]
    tags: ["*"]
  pull_request:
    branches: [dev]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: build-${{ github.ref }}-${{ matrix.os }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Set Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-
      - run: corepack enable
      - run: yarn install --immutable
      - run: yarn build
      - run: yarn format:check
      - run: yarn lint
      - run: yarn ui:validate
      - run: yarn jest:test
      - run: yarn playwright install-deps
      - run: yarn playwright install
      - run: yarn playwright:test
      - name: yarn playwright:test (with database)
        if: runner.os == 'Linux'
        run: |
          ( cd keycloak && ./start.sh ) &
          ( cd keycloak && ./wait.sh )
          ( cd postgres && ./start.sh ) &
          ( cd postgres && ./wait.sh )
          . keycloak/envKeycloak
          . postgres/envPostgres
          yarn playwright:test
          podman stop -a
      - run: yarn pack
      - uses: actions/upload-artifact@v3
        if: runner.os == 'Linux'
        with:
          name: npm-package
          path: package.tgz
      # Docker image and helm repository (built on Linux only):
      - run: |
          docker build . -t docker.io/davdiv/musicociel:local
          docker image save -o docker-image.tar docker.io/davdiv/musicociel:local
        env:
          DOCKER_BUILDKIT: "1"
        if: runner.os == 'Linux'
      - uses: actions/upload-artifact@v3
        if: runner.os == 'Linux'
        with:
          name: docker-image
          path: docker-image.tar
      - run: |
          helm lint helm/chart --strict
          helm package helm/chart -d helm/repository
          helm repo index helm/repository
          yarn dlx marked -i helm/repository/README.md -o helm/repository/index.html
        if: runner.os == 'Linux'
      - uses: actions/upload-artifact@v3
        if: runner.os == 'Linux'
        with:
          name: helm-repository
          path: |
            helm/repository
            !helm/repository/README.md
      - name: "Load in minikube cluster"
        if: runner.os == 'Linux'
        run: |
          minikube start
          minikube addons enable ingress
          minikube image load docker.io/davdiv/musicociel:local
          echo "$(minikube ip) musicociel.local keycloak.local" | sudo tee -a /etc/hosts
          helm install musicociel helm/chart --set-string musicociel.tag=local,keycloak.users[0].username=test-user,keycloak.users[0].password=test-password
      - run: yarn playwright:test
        if: runner.os == 'Linux'
        env:
          TEST_MUSICOCIEL_URL: http://musicociel.local
          TEST_MUSICOCIEL_USERNAME: test-user
          TEST_MUSICOCIEL_PASSWORD: test-password
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: publish-dev
      cancel-in-progress: true
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: npm-package
      - uses: actions/download-artifact@v3
        with:
          name: docker-image
      - uses: actions/download-artifact@v3
        with:
          name: helm-repository
          path: gh-pages/helm/
      - name: Publish
        run: |
          echo "Publish in gh-pages"
          ( cd .. && tar -xf package.tgz )
          mv ../package/build/public "./dev"
          docker image load -i ../docker-image.tar
          echo "Publish in docker"
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username davdiv --password-stdin
          docker tag docker.io/davdiv/musicociel:local docker.io/davdiv/musicociel:dev
          docker push docker.io/davdiv/musicociel:dev
          docker logout
        working-directory: gh-pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "gh-pages"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
