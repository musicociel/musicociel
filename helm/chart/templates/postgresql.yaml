{{- if and .Values.postgresql.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-postgresql"
type: kubernetes.io/basic-auth
data:
  username: "{{ b64enc .Values.postgresql.username }}"
  password: "{{ b64enc (default (randAlphaNum 25) .Values.postgresql.password) }}"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}-postgresql"
  labels:
    app.kubernetes.io/name: "postgresql"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ .Values.postgresql.size }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-postgresql"
  labels:
    app.kubernetes.io/name: "postgresql"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "postgresql"
      app.kubernetes.io/instance: "{{ .Release.Name }}"
      app.kubernetes.io/managed-by: "{{ .Release.Service }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "postgresql"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image }}:{{ .Values.postgresql.tag }}"
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-postgresql"
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-postgresql"
              key: password
        - name: POSTGRES_DB
          value: "{{ .Values.postgresql.database }}"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        ports:
        - name: postgresql
          containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}-postgresql"
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-postgresql"
  labels:
    app.kubernetes.io/name: "postgresql"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432
  selector:
    app.kubernetes.io/name: "postgresql"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
{{- end }}
